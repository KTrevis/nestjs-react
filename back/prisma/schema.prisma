// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String

  friendshipSent     Friendship[]     @relation("sender")
  friendshipReceived Friendship[]     @relation("recipient")
  chatGroupUsers     ChatGroupUsers[]
  messages           Message[]
  createGroups       ChatGroup[]
}

model Friendship {
  id Int @id @default(autoincrement())

  sender   User @relation("sender", fields: [senderId], references: [id], onDelete: Cascade)
  senderId Int

  recipient   User @relation("recipient", fields: [recipientId], references: [id], onDelete: Cascade)
  recipientId Int

  pending Boolean @default(true)
}

model ChatGroup {
  id             Int              @id @default(autoincrement())
  name           String

  creator        User @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId      Int

  chatGroupUsers ChatGroupUsers[]
  messages       Message[]
}

model ChatGroupUsers {
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  chatGroup   ChatGroup @relation(fields: [chatGroupId], references: [id], onDelete: Cascade)
  chatGroupId Int

  @@id([userId, chatGroupId])
}

model Message {
  id      Int    @id @default(autoincrement())
  message String

  chatGroup   ChatGroup @relation(fields: [chatGroupId], references: [id], onDelete: Cascade)
  chatGroupId Int

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}
